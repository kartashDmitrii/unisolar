(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=3)})([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return hideList});class hideList{constructor(listBlock,object={}){if(typeof object.fixHeight!=="undefined"){this.fixHeight=object.fixHeight}if(typeof object.minHeight!=="undefined"){this.minHeight=object.minHeight}this.listBlock=listBlock;this.list=this.listBlock.querySelector("[data-block]");this.listBlock.querySelector("[data-btn]").addEventListener("click",e=>{this.showBlock(e)});if(this.listBlock.querySelector("[data-btn]").classList.contains("active")){this.fixHeight===undefined?this.list.style.height=`${this.list.scrollHeight}px`:this.list.style.height=`${this.fixHeight}px`;this.list.classList.add("active")}if(this.list.querySelector(".close")){this.list.querySelector(".close").addEventListener("click",e=>{this.showBlock(e)})}}showBlock(e){e.preventDefault();let blockHeight=parseInt(window.getComputedStyle(this.list).getPropertyValue("height"));let min;this.minHeight===undefined?min=0:min=this.minHeight;if(blockHeight===min){this.fixHeight===undefined?this.list.style.height=`${this.list.scrollHeight}px`:this.list.style.height=`${this.fixHeight}px`;this.listBlock.querySelector("[data-btn]").classList.add("active");this.list.classList.add("active")}else{this.listBlock.querySelector("[data-btn]").classList.remove("active");this.list.classList.remove("active");this.minHeight===undefined?this.list.style.height="0":this.list.style.height=`${this.minHeight}px`}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return popupFunc});class popupFunc{constructor(button,popup,wrapper=true){this.button=button;this.popup=popup;this.wrapper=wrapper;this.openPopupFunc=this.privateOpenPopup.bind(this);this.closePopupFunc=this.privateClosePopup.bind(this);if(this.button.dataset.stopEvent===undefined){if(Array.isArray(this.button)){this.button.forEach(elem=>{elem.addEventListener("click",this.openPopupFunc)})}else{this.button.addEventListener("click",this.openPopupFunc)}}if(Array.isArray(this.popup)){this.popup.forEach(elem=>{elem.querySelectorAll(".close").forEach(elem=>elem.addEventListener("click",this.closePopupFunc))})}else{this.popup.querySelectorAll(".close").forEach(elem=>elem.addEventListener("click",this.closePopupFunc))}}privateOpenPopup(event){event.preventDefault();this.openPopup()}privateClosePopup(event){if(!event.target.classList.contains("close")){event.stopPropagation()}else{if(Array.isArray(this.popup)){this.popup.forEach(elem=>{elem.classList.remove("active");if(elem.parentNode.classList.contains("wrapper")&&this.wrapper){elem.parentNode.classList.remove("active")}if(window.screen.width<768){document.body.classList.remove("hidden")}if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.remove("active")}})}else{this.popup.classList.remove("active");if(this.popup.parentNode.classList.contains("wrapper")&&this.wrapper){this.popup.parentNode.classList.remove("active")}if(window.screen.width<768){document.body.classList.remove("hidden")}if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.remove("active")}}window.removeEventListener("mousedown",this.closePopupFunc)}}openPopup(){document.querySelectorAll(".popup-wrapper>div").forEach(elem=>{elem.classList.remove("active")});document.querySelectorAll(".popup").forEach(elem=>{elem.classList.remove("active")});if(Array.isArray(this.popup)){this.popup.forEach(elem=>{elem.classList.add("active");if(elem.parentNode.classList.contains("wrapper")&&this.wrapper){elem.parentNode.classList.add("active")}if(window.screen.width<768){document.body.classList.add("hidden")}});if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.add("active")}}else{console.log(this.popup);this.popup.classList.add("active");if(this.popup.parentNode.classList.contains("wrapper")&&this.wrapper){this.popup.parentNode.classList.add("active")}if(window.screen.width<768){document.body.classList.add("hidden")}if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.add("active")}}window.addEventListener("mousedown",this.closePopupFunc)}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return NumberTimer});class NumberTimer{constructor(object){this.elem=object.elem;this.delay=typeof object.delay==="undefined"?1e3:object.delay;this.max=typeof object.max==="undefined"?parseInt(this.elem.innerText):object.max;this.min=typeof object.min==="undefined"?0:object.max;this.type=typeof object.type==="undefined"?"default":object.type;switch(this.type){case"ease-out":this.bezier=[0,0,.58,1];break;case"default":this.bezier=[0];break}this.elem.innerText=0;this.iteration=0;this.step=Math.round(this.delay/(this.max-this.min));this.currBezier=Math.floor(this.iteration/((this.max-this.min)/this.bezier.length));this.offsetElem=this.offset(this.elem);this.startAnimationFunc=this.startAnimation.bind(this);window.addEventListener("scroll",this.startAnimationFunc);this.start=false;let interval=setInterval(()=>{if(this.start){this.step=Math.round(this.delay/(this.max-this.min));this.currBezier=Math.floor(this.iteration/((this.max-this.min)/this.bezier.length));if(this.iteration<this.max-1){this.iteration++;this.elem.innerText=this.iteration}else{this.iteration++;this.elem.innerText=this.iteration;clearInterval(interval)}}},this.step*(this.bezier[this.currBezier]+1))}offset(el){let rect=el.getBoundingClientRect(),scrollLeft=window.pageXOffset||document.documentElement.scrollLeft,scrollTop=window.pageYOffset||document.documentElement.scrollTop;return{top:rect.top+scrollTop,left:rect.left+scrollLeft}}startAnimation(){if(window.scrollY+window.screen.height/2>=this.offsetElem.top){this.start=true;window.removeEventListener("scroll",this.startAnimationFunc)}}}},function(module,exports,__webpack_require__){__webpack_require__(4);__webpack_require__(0);__webpack_require__(2);module.exports=__webpack_require__(1)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _components_hideList__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);var _components_NumberTimer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(2);var _components_popupFunc__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(1);if(document.querySelector("section.main-slider")){let allSlide=document.querySelector("section.main-slider .slide-number .all");allSlide.innerText=document.querySelectorAll("section.main-slider .slide").length;let swiper=new Swiper("section.main-slider .slider",{loop:true,pagination:{el:"section.main-slider .user-menu .dots",clickable:true,renderBullet:function(index,className){return`<li class="${className}"><span></span></li>`}},breakpoints:{0:{direction:"horizontal"},768:{direction:"vertical"}},on:{init:function(swiper){let currentSlide=document.querySelector("section.main-slider .slide-number .current");currentSlide.innerText=swiper.realIndex+1}}});swiper.on("slideChange",function(swiper){let currentSlide=document.querySelector("section.main-slider .slide-number .current");currentSlide.innerText=swiper.realIndex+1});let goDownBtn=document.querySelector("section.main-slider .go-down");goDownBtn.addEventListener("click",function(e){e.preventDefault();window.scrollTo(0,document.body.scrollHeight)})}if(document.querySelector("section.certificates-slider")){let swiper=new Swiper("section.certificates-slider .slider",{spaceBetween:60,navigation:{nextEl:"section.certificates-slider .navigation .next",prevEl:"section.certificates-slider .navigation .prev"},breakpoints:{0:{slidesPerView:1},681:{slidesPerView:2}}})}if(document.querySelector("section.main-video")){let video=document.querySelector("section.main-video video");let preview=document.querySelector("section.main-video .preview");preview.addEventListener("click",function(){preview.classList.add("hide");video.play()});video.addEventListener("click",function(){preview.classList.remove("hide");video.pause()})}if(document.querySelector("section.questions-grid")){let section=document.querySelector("section.questions-grid");let grid=section.querySelector(".grid");for(let i=0;i<2;i++){let block=document.createElement("div");block.classList.add("block");grid.appendChild(block)}section.querySelectorAll(".elem").forEach((elem,i)=>{[...grid.querySelectorAll(".block")][i%2].appendChild(elem);if(section.classList.contains("questions")){new _components_hideList__WEBPACK_IMPORTED_MODULE_0__["default"](elem)}})}if(document.querySelector("section.partners")){let swiper=new Swiper("section.partners .slider",{breakpoints:{0:{slidesPerView:1.5},421:{slidesPerView:2.5,spaceBetween:10},768:{slidesPerView:3.5},1001:{slidesPerView:4.5},1366:{slidesPerView:5.5},1566:{slidesPerView:5.5,spaceBetween:60}}})}if(document.querySelector("section.seo-text")){let textWrapper=document.querySelector("section.seo-text .text-wrapper");let text=document.querySelector("section.seo-text .text");if(window.screen.width>1024){if(text.scrollHeight<=175){textWrapper.classList.add("no-scroll")}}else if(window.screen.width>681){if(text.scrollHeight<=250){textWrapper.classList.add("no-scroll")}}else{if(text.scrollHeight<=320){textWrapper.classList.add("no-scroll")}}text.addEventListener("scroll",function(){let currPos=text.scrollHeight-text.offsetHeight-text.scrollTop;textWrapper.classList[currPos<20?"add":"remove"]("no-fade")})}if(document.querySelector("[data-popup]")){document.querySelectorAll("[data-popup]").forEach(elem=>{new _components_popupFunc__WEBPACK_IMPORTED_MODULE_2__["default"](elem,document.querySelector(`.popup.${elem.dataset.popup}`))})}if(document.querySelector("section.project-images")){let allImagesSlider=new Swiper("section.project-images .all-images",{freeMode:true,watchSlidesVisibility:true,watchSlidesProgress:true,breakpoints:{0:{slidesPerView:3,slidesPerScroll:3,spaceBetween:10},768:{slidesPerView:3.5,slidesPerScroll:3,spaceBetween:10},1001:{spaceBetween:20,slidesPerView:5,slidesPerScroll:5},1366:{spaceBetween:40,slidesPerView:5.75,slidesPerScroll:5}}});let mainImageSlider=new Swiper("section.project-images .main-image",{spaceBetween:10,navigation:{nextEl:"section.project-images .main-image .next",prevEl:"section.project-images .main-image .prev"},thumbs:{swiper:allImagesSlider}})}if(document.querySelector("section.year-slider")){let yearsSlider=new Swiper("section.year-slider .years .year",{allowTouchMove:false,navigation:{nextEl:"section.year-slider .navigation .next",prevEl:"section.year-slider .navigation .prev"}});let dataSlider=new Swiper("section.year-slider .data-slider",{navigation:{nextEl:"section.year-slider .navigation .next",prevEl:"section.year-slider .navigation .prev"},on:{activeIndexChange(){yearsSlider.slideTo(dataSlider.activeIndex)}}})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
